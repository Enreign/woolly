[package]
name = "woolly-server"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true
description = "HTTP/WebSocket server with MCP integration for Woolly LLM"

[features]
default = ["mcp"]
mcp = ["dep:woolly-mcp"]

[dependencies]
# Internal dependencies
woolly-core = { path = "../woolly-core", features = ["mcp"] }
woolly-mcp = { path = "../woolly-mcp", optional = true }
woolly-tensor = { path = "../woolly-tensor" }
woolly-gguf = { path = "../woolly-gguf" }

# Async runtime
tokio = { workspace = true, features = ["full"] }
async-trait = { workspace = true }
futures = "0.3"

# HTTP/WebSocket server
axum = { workspace = true, features = ["ws", "macros", "multipart"] }
hyper = { workspace = true }
tower = { version = "0.5", features = ["full"] }
tower-http = { version = "0.6", features = ["fs", "cors", "trace", "auth", "limit"] }

# Serialization/Deserialization
serde = { workspace = true }
serde_json = { workspace = true }

# Error handling
thiserror = { workspace = true }
anyhow = { workspace = true }

# Logging and tracing
tracing = { workspace = true }
tracing-subscriber = { workspace = true }

# WebSocket handling
tokio-tungstenite = { workspace = true }

# Authentication and security
jsonwebtoken = "9.3"
headers = "0.4"
uuid = { version = "1.11", features = ["v4", "serde"] }

# Rate limiting
governor = "0.10"
tokio-util = "0.7"

# Configuration
config = "0.15"
toml = "0.8"

# Collections and utilities
dashmap = { workspace = true }
parking_lot = "0.12"
once_cell = "1.20"
rand = "0.8"

# Time handling
chrono = { workspace = true }

# Additional HTTP utilities
mime = "0.3"
mime_guess = "2.0"

# CLI
clap = { workspace = true }

[dev-dependencies]
tokio-test = "0.4"
criterion = { workspace = true }
proptest = { workspace = true }

[[bin]]
name = "woolly-server"
path = "src/main.rs"

[lib]
name = "woolly_server"
path = "src/lib.rs"